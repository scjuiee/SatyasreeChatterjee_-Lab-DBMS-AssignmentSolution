##Question No 3
SELECT 
    customer.cus_gender, COUNT(customer.cus_gender) AS count
FROM
    customer
        INNER JOIN
    `order` ON customer.cus__id = `order`.cus_id
WHERE
    `order`.ord_amount >= 3000
GROUP BY customer.cus_gender;

##Question No 4
SELECT 
    ORD.ORD_ID,
    ORD.ORD_AMOUNT,
    ORD.ORD_DATE,
    ORD.PROD_ID,
    ORD.CUS_ID,
    PROD.PRO_NAME
FROM
    `order-directory`.Order ORD
        INNER JOIN
    PRODUCT PROD ON ORD.PROD_ID = PROD.PRO_ID
WHERE
    ORD.CUS_ID = 2;
    
##Question No 5:
SELECT 
    *
FROM
    supplier
WHERE
    supp_id IN (SELECT 
            productdetails.supp_id
        FROM
            productdetails
        GROUP BY productdetails.supp_id
        HAVING COUNT(productdetails.supp_id) > 1);
        
 ##Question No 6:
 SELECT 
    *
FROM
    CATEGORY
WHERE
    CAT_ID IN (SELECT 
            CAT_ID
        FROM
            PRODUCT
        WHERE
            PRO_ID IN (SELECT 
                    PROD_ID
                FROM
                    `order-directory`.Order
                WHERE
                    ORD_AMOUNT IN (SELECT 
                            MIN(ORD_AMOUNT)
                        FROM
                            `order-directory`.Order)));
                            
##Question No 7:
SELECT 
    PRO_ID, PRO_NAME
FROM
    PRODUCT PRD
WHERE
    PRO_ID IN (SELECT 
            PROD_ID
        FROM
            `order-directory`.Order
        WHERE
            ORD_DATE > '2021-10-05');
            
##Question No 8:
SELECT 
    r.rat_ratstars, c.cus_name, s.supp_name
FROM
    rating AS r
        INNER JOIN
    customer AS c ON c.cus__id = r.cus_id
        INNER JOIN
    supplier AS s ON s.supp_id = r.supp_id
    WHERE ROWNUM =3
ORDER BY rat_ratstars DESC;

##Question No 9:
SELECT * FROM CUSTOMER WHERE CUS_NAME LIKE '%A' OR CUS_NAME like 'A%';

##Question No 10:
SELECT 
    SUM(ORD_AMOUNT)
FROM
    `order-directory`.Order ORD
WHERE
    ORD.CUS_ID IN (SELECT 
            CUS__ID
        FROM
            CUSTOMER
        WHERE
            CUS_GENDER = 'M');
            
 ##Question No 11:
 select *
from customer left outer join `order` on customer.cus__id = `order`.cus_id;

##Question No 12:
DELIMITER &&  
 CREATE PROCEDURE categorize_supplier()
 BEGIN
 select supplier.supp_id,supplier.supp_name,rating.rat_ratstars,
 CASE
     WHEN rating.rat_ratstars > 4 THEN 'Genuine Supplier'
     WHEN rating.rat_ratstars > 2 THEN 'Average Supplier'
     ELSE 'Supplier should not be considered'
 END AS verdict from rating inner join supplier on supplier.supp_id = rating.supp_id;
 END &&  
 DELIMITER ;  

 call categorize_supplier();
            
